Terminals unused in grammar

   COMMA
   WHITESPACE
   NEWLINE


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 func FUNC BEG body_main FUNC END

    3 func: func FUNC BEG func_def FUNC END
    4     | %empty

    5 func_def: ID stmt_list

    6 body_main: MAIN stmt_list

    7 stmt_list: stmt_list stmt
    8          | %empty

    9 stmt: LABEL COLON
   10     | asg SEMICOL
   11     | CALL ID SEMICOL
   12     | IF expr GOTO LABEL
   13     | GOTO LABEL
   14     | RETURN SEMICOL
   15     | RETURN term SEMICOL
   16     | "param" term SEMICOL

   17 term: VAR
   18     | REG
   19     | INT_VALUE
   20     | FLOAT_VAL

   21 asg: VAR EQUALS expr
   22    | REG EQUALS expr
   23    | REG LS REG RS EQUALS expr

   24 expr: VAR op VAR
   25     | VAR op REG
   26     | VAR op INT_VALUE
   27     | VAR op FLOAT_VAL
   28     | REG op VAR
   29     | REG op REG
   30     | REG op INT_VALUE
   31     | REG op FLOAT_VAL
   32     | INT_VALUE op VAR
   33     | INT_VALUE op REG
   34     | INT_VALUE op INT_VALUE
   35     | INT_VALUE op FLOAT_VAL
   36     | FLOAT_VAL op VAR
   37     | FLOAT_VAL op REG
   38     | FLOAT_VAL op INT_VALUE
   39     | FLOAT_VAL op FLOAT_VAL
   40     | REG LS REG RS
   41     | REG
   42     | VAR
   43     | INT_VALUE
   44     | FLOAT_VAL
   45     | ADDR LB VAR RB
   46     | ADDR LB REG RB

   47 op: LT
   48   | GT
   49   | LE
   50   | GE
   51   | COMP
   52   | NEQ
   53   | ADD
   54   | SUB
   55   | MUL
   56   | DIV
   57   | MOD
   58   | AND
   59   | OR


Terminals, with rules where they appear

$end (0) 0
error (256)
LB (258) 45 46
VAR (259) 17 21 24 25 26 27 28 32 36 42 45
RB (260) 45 46
ADDR (261) 45 46
CALL (262) 11
FLOAT_VAL (263) 20 27 31 35 36 37 38 39 44
INT_VALUE (264) 19 26 30 32 33 34 35 38 43
REG (265) 18 22 23 25 28 29 30 31 33 37 40 41 46
AND (266) 58
OR (267) 59
ID (268) 5 11
LS (269) 23 40
RS (270) 23 40
EQUALS (271) 21 22 23
ADD (272) 53
SUB (273) 54
MUL (274) 55
DIV (275) 56
MOD (276) 57
GT (277) 48
LT (278) 47
GE (279) 50
LE (280) 49
COMP (281) 51
COLON (282) 9
NEQ (283) 52
COMMA (284)
IF (285) 12
GOTO (286) 12 13
LABEL (287) 9 12 13
WHITESPACE (288)
NEWLINE (289)
FUNC (290) 2 3
BEG (291) 2 3
END (292) 2 3
MAIN (293) 6
RETURN (294) 14 15
SEMICOL (295) 10 11 14 15 16
"param" (296) 16


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
start (43)
    on left: 2, on right: 0
$@1 (44)
    on left: 1, on right: 2
func (45)
    on left: 3 4, on right: 2 3
func_def (46)
    on left: 5, on right: 3
body_main (47)
    on left: 6, on right: 2
stmt_list (48)
    on left: 7 8, on right: 5 6 7
stmt (49)
    on left: 9 10 11 12 13 14 15 16, on right: 7
term (50)
    on left: 17 18 19 20, on right: 15 16
asg (51)
    on left: 21 22 23, on right: 10
expr (52)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46, on right: 12 21 22 23
op (53)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . func FUNC BEG body_main FUNC END

    $default  reduce using rule 4 (func)

    func  go to state 4


State 3

    0 $accept: start $end .

    $default  accept


State 4

    2 start: $@1 func . FUNC BEG body_main FUNC END
    3 func: func . FUNC BEG func_def FUNC END

    FUNC  shift, and go to state 5


State 5

    2 start: $@1 func FUNC . BEG body_main FUNC END
    3 func: func FUNC . BEG func_def FUNC END

    BEG  shift, and go to state 6


State 6

    2 start: $@1 func FUNC BEG . body_main FUNC END
    3 func: func FUNC BEG . func_def FUNC END

    ID    shift, and go to state 7
    MAIN  shift, and go to state 8

    func_def   go to state 9
    body_main  go to state 10


State 7

    5 func_def: ID . stmt_list

    $default  reduce using rule 8 (stmt_list)

    stmt_list  go to state 11


State 8

    6 body_main: MAIN . stmt_list

    $default  reduce using rule 8 (stmt_list)

    stmt_list  go to state 12


State 9

    3 func: func FUNC BEG func_def . FUNC END

    FUNC  shift, and go to state 13


State 10

    2 start: $@1 func FUNC BEG body_main . FUNC END

    FUNC  shift, and go to state 14


State 11

    5 func_def: ID stmt_list .
    7 stmt_list: stmt_list . stmt

    VAR      shift, and go to state 15
    CALL     shift, and go to state 16
    REG      shift, and go to state 17
    IF       shift, and go to state 18
    GOTO     shift, and go to state 19
    LABEL    shift, and go to state 20
    RETURN   shift, and go to state 21
    "param"  shift, and go to state 22

    $default  reduce using rule 5 (func_def)

    stmt  go to state 23
    asg   go to state 24


State 12

    6 body_main: MAIN stmt_list .
    7 stmt_list: stmt_list . stmt

    VAR      shift, and go to state 15
    CALL     shift, and go to state 16
    REG      shift, and go to state 17
    IF       shift, and go to state 18
    GOTO     shift, and go to state 19
    LABEL    shift, and go to state 20
    RETURN   shift, and go to state 21
    "param"  shift, and go to state 22

    $default  reduce using rule 6 (body_main)

    stmt  go to state 23
    asg   go to state 24


State 13

    3 func: func FUNC BEG func_def FUNC . END

    END  shift, and go to state 25


State 14

    2 start: $@1 func FUNC BEG body_main FUNC . END

    END  shift, and go to state 26


State 15

   21 asg: VAR . EQUALS expr

    EQUALS  shift, and go to state 27


State 16

   11 stmt: CALL . ID SEMICOL

    ID  shift, and go to state 28


State 17

   22 asg: REG . EQUALS expr
   23    | REG . LS REG RS EQUALS expr

    LS      shift, and go to state 29
    EQUALS  shift, and go to state 30


State 18

   12 stmt: IF . expr GOTO LABEL

    VAR        shift, and go to state 31
    ADDR       shift, and go to state 32
    FLOAT_VAL  shift, and go to state 33
    INT_VALUE  shift, and go to state 34
    REG        shift, and go to state 35

    expr  go to state 36


State 19

   13 stmt: GOTO . LABEL

    LABEL  shift, and go to state 37


State 20

    9 stmt: LABEL . COLON

    COLON  shift, and go to state 38


State 21

   14 stmt: RETURN . SEMICOL
   15     | RETURN . term SEMICOL

    VAR        shift, and go to state 39
    FLOAT_VAL  shift, and go to state 40
    INT_VALUE  shift, and go to state 41
    REG        shift, and go to state 42
    SEMICOL    shift, and go to state 43

    term  go to state 44


State 22

   16 stmt: "param" . term SEMICOL

    VAR        shift, and go to state 39
    FLOAT_VAL  shift, and go to state 40
    INT_VALUE  shift, and go to state 41
    REG        shift, and go to state 42

    term  go to state 45


State 23

    7 stmt_list: stmt_list stmt .

    $default  reduce using rule 7 (stmt_list)


State 24

   10 stmt: asg . SEMICOL

    SEMICOL  shift, and go to state 46


State 25

    3 func: func FUNC BEG func_def FUNC END .

    $default  reduce using rule 3 (func)


State 26

    2 start: $@1 func FUNC BEG body_main FUNC END .

    $default  reduce using rule 2 (start)


State 27

   21 asg: VAR EQUALS . expr

    VAR        shift, and go to state 31
    ADDR       shift, and go to state 32
    FLOAT_VAL  shift, and go to state 33
    INT_VALUE  shift, and go to state 34
    REG        shift, and go to state 35

    expr  go to state 47


State 28

   11 stmt: CALL ID . SEMICOL

    SEMICOL  shift, and go to state 48


State 29

   23 asg: REG LS . REG RS EQUALS expr

    REG  shift, and go to state 49


State 30

   22 asg: REG EQUALS . expr

    VAR        shift, and go to state 31
    ADDR       shift, and go to state 32
    FLOAT_VAL  shift, and go to state 33
    INT_VALUE  shift, and go to state 34
    REG        shift, and go to state 35

    expr  go to state 50


State 31

   24 expr: VAR . op VAR
   25     | VAR . op REG
   26     | VAR . op INT_VALUE
   27     | VAR . op FLOAT_VAL
   42     | VAR .

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    ADD   shift, and go to state 53
    SUB   shift, and go to state 54
    MUL   shift, and go to state 55
    DIV   shift, and go to state 56
    MOD   shift, and go to state 57
    GT    shift, and go to state 58
    LT    shift, and go to state 59
    GE    shift, and go to state 60
    LE    shift, and go to state 61
    COMP  shift, and go to state 62
    NEQ   shift, and go to state 63

    $default  reduce using rule 42 (expr)

    op  go to state 64


State 32

   45 expr: ADDR . LB VAR RB
   46     | ADDR . LB REG RB

    LB  shift, and go to state 65


State 33

   36 expr: FLOAT_VAL . op VAR
   37     | FLOAT_VAL . op REG
   38     | FLOAT_VAL . op INT_VALUE
   39     | FLOAT_VAL . op FLOAT_VAL
   44     | FLOAT_VAL .

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    ADD   shift, and go to state 53
    SUB   shift, and go to state 54
    MUL   shift, and go to state 55
    DIV   shift, and go to state 56
    MOD   shift, and go to state 57
    GT    shift, and go to state 58
    LT    shift, and go to state 59
    GE    shift, and go to state 60
    LE    shift, and go to state 61
    COMP  shift, and go to state 62
    NEQ   shift, and go to state 63

    $default  reduce using rule 44 (expr)

    op  go to state 66


State 34

   32 expr: INT_VALUE . op VAR
   33     | INT_VALUE . op REG
   34     | INT_VALUE . op INT_VALUE
   35     | INT_VALUE . op FLOAT_VAL
   43     | INT_VALUE .

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    ADD   shift, and go to state 53
    SUB   shift, and go to state 54
    MUL   shift, and go to state 55
    DIV   shift, and go to state 56
    MOD   shift, and go to state 57
    GT    shift, and go to state 58
    LT    shift, and go to state 59
    GE    shift, and go to state 60
    LE    shift, and go to state 61
    COMP  shift, and go to state 62
    NEQ   shift, and go to state 63

    $default  reduce using rule 43 (expr)

    op  go to state 67


State 35

   28 expr: REG . op VAR
   29     | REG . op REG
   30     | REG . op INT_VALUE
   31     | REG . op FLOAT_VAL
   40     | REG . LS REG RS
   41     | REG .

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    LS    shift, and go to state 68
    ADD   shift, and go to state 53
    SUB   shift, and go to state 54
    MUL   shift, and go to state 55
    DIV   shift, and go to state 56
    MOD   shift, and go to state 57
    GT    shift, and go to state 58
    LT    shift, and go to state 59
    GE    shift, and go to state 60
    LE    shift, and go to state 61
    COMP  shift, and go to state 62
    NEQ   shift, and go to state 63

    $default  reduce using rule 41 (expr)

    op  go to state 69


State 36

   12 stmt: IF expr . GOTO LABEL

    GOTO  shift, and go to state 70


State 37

   13 stmt: GOTO LABEL .

    $default  reduce using rule 13 (stmt)


State 38

    9 stmt: LABEL COLON .

    $default  reduce using rule 9 (stmt)


State 39

   17 term: VAR .

    $default  reduce using rule 17 (term)


State 40

   20 term: FLOAT_VAL .

    $default  reduce using rule 20 (term)


State 41

   19 term: INT_VALUE .

    $default  reduce using rule 19 (term)


State 42

   18 term: REG .

    $default  reduce using rule 18 (term)


State 43

   14 stmt: RETURN SEMICOL .

    $default  reduce using rule 14 (stmt)


State 44

   15 stmt: RETURN term . SEMICOL

    SEMICOL  shift, and go to state 71


State 45

   16 stmt: "param" term . SEMICOL

    SEMICOL  shift, and go to state 72


State 46

   10 stmt: asg SEMICOL .

    $default  reduce using rule 10 (stmt)


State 47

   21 asg: VAR EQUALS expr .

    $default  reduce using rule 21 (asg)


State 48

   11 stmt: CALL ID SEMICOL .

    $default  reduce using rule 11 (stmt)


State 49

   23 asg: REG LS REG . RS EQUALS expr

    RS  shift, and go to state 73


State 50

   22 asg: REG EQUALS expr .

    $default  reduce using rule 22 (asg)


State 51

   58 op: AND .

    $default  reduce using rule 58 (op)


State 52

   59 op: OR .

    $default  reduce using rule 59 (op)


State 53

   53 op: ADD .

    $default  reduce using rule 53 (op)


State 54

   54 op: SUB .

    $default  reduce using rule 54 (op)


State 55

   55 op: MUL .

    $default  reduce using rule 55 (op)


State 56

   56 op: DIV .

    $default  reduce using rule 56 (op)


State 57

   57 op: MOD .

    $default  reduce using rule 57 (op)


State 58

   48 op: GT .

    $default  reduce using rule 48 (op)


State 59

   47 op: LT .

    $default  reduce using rule 47 (op)


State 60

   50 op: GE .

    $default  reduce using rule 50 (op)


State 61

   49 op: LE .

    $default  reduce using rule 49 (op)


State 62

   51 op: COMP .

    $default  reduce using rule 51 (op)


State 63

   52 op: NEQ .

    $default  reduce using rule 52 (op)


State 64

   24 expr: VAR op . VAR
   25     | VAR op . REG
   26     | VAR op . INT_VALUE
   27     | VAR op . FLOAT_VAL

    VAR        shift, and go to state 74
    FLOAT_VAL  shift, and go to state 75
    INT_VALUE  shift, and go to state 76
    REG        shift, and go to state 77


State 65

   45 expr: ADDR LB . VAR RB
   46     | ADDR LB . REG RB

    VAR  shift, and go to state 78
    REG  shift, and go to state 79


State 66

   36 expr: FLOAT_VAL op . VAR
   37     | FLOAT_VAL op . REG
   38     | FLOAT_VAL op . INT_VALUE
   39     | FLOAT_VAL op . FLOAT_VAL

    VAR        shift, and go to state 80
    FLOAT_VAL  shift, and go to state 81
    INT_VALUE  shift, and go to state 82
    REG        shift, and go to state 83


State 67

   32 expr: INT_VALUE op . VAR
   33     | INT_VALUE op . REG
   34     | INT_VALUE op . INT_VALUE
   35     | INT_VALUE op . FLOAT_VAL

    VAR        shift, and go to state 84
    FLOAT_VAL  shift, and go to state 85
    INT_VALUE  shift, and go to state 86
    REG        shift, and go to state 87


State 68

   40 expr: REG LS . REG RS

    REG  shift, and go to state 88


State 69

   28 expr: REG op . VAR
   29     | REG op . REG
   30     | REG op . INT_VALUE
   31     | REG op . FLOAT_VAL

    VAR        shift, and go to state 89
    FLOAT_VAL  shift, and go to state 90
    INT_VALUE  shift, and go to state 91
    REG        shift, and go to state 92


State 70

   12 stmt: IF expr GOTO . LABEL

    LABEL  shift, and go to state 93


State 71

   15 stmt: RETURN term SEMICOL .

    $default  reduce using rule 15 (stmt)


State 72

   16 stmt: "param" term SEMICOL .

    $default  reduce using rule 16 (stmt)


State 73

   23 asg: REG LS REG RS . EQUALS expr

    EQUALS  shift, and go to state 94


State 74

   24 expr: VAR op VAR .

    $default  reduce using rule 24 (expr)


State 75

   27 expr: VAR op FLOAT_VAL .

    $default  reduce using rule 27 (expr)


State 76

   26 expr: VAR op INT_VALUE .

    $default  reduce using rule 26 (expr)


State 77

   25 expr: VAR op REG .

    $default  reduce using rule 25 (expr)


State 78

   45 expr: ADDR LB VAR . RB

    RB  shift, and go to state 95


State 79

   46 expr: ADDR LB REG . RB

    RB  shift, and go to state 96


State 80

   36 expr: FLOAT_VAL op VAR .

    $default  reduce using rule 36 (expr)


State 81

   39 expr: FLOAT_VAL op FLOAT_VAL .

    $default  reduce using rule 39 (expr)


State 82

   38 expr: FLOAT_VAL op INT_VALUE .

    $default  reduce using rule 38 (expr)


State 83

   37 expr: FLOAT_VAL op REG .

    $default  reduce using rule 37 (expr)


State 84

   32 expr: INT_VALUE op VAR .

    $default  reduce using rule 32 (expr)


State 85

   35 expr: INT_VALUE op FLOAT_VAL .

    $default  reduce using rule 35 (expr)


State 86

   34 expr: INT_VALUE op INT_VALUE .

    $default  reduce using rule 34 (expr)


State 87

   33 expr: INT_VALUE op REG .

    $default  reduce using rule 33 (expr)


State 88

   40 expr: REG LS REG . RS

    RS  shift, and go to state 97


State 89

   28 expr: REG op VAR .

    $default  reduce using rule 28 (expr)


State 90

   31 expr: REG op FLOAT_VAL .

    $default  reduce using rule 31 (expr)


State 91

   30 expr: REG op INT_VALUE .

    $default  reduce using rule 30 (expr)


State 92

   29 expr: REG op REG .

    $default  reduce using rule 29 (expr)


State 93

   12 stmt: IF expr GOTO LABEL .

    $default  reduce using rule 12 (stmt)


State 94

   23 asg: REG LS REG RS EQUALS . expr

    VAR        shift, and go to state 31
    ADDR       shift, and go to state 32
    FLOAT_VAL  shift, and go to state 33
    INT_VALUE  shift, and go to state 34
    REG        shift, and go to state 35

    expr  go to state 98


State 95

   45 expr: ADDR LB VAR RB .

    $default  reduce using rule 45 (expr)


State 96

   46 expr: ADDR LB REG RB .

    $default  reduce using rule 46 (expr)


State 97

   40 expr: REG LS REG RS .

    $default  reduce using rule 40 (expr)


State 98

   23 asg: REG LS REG RS EQUALS expr .

    $default  reduce using rule 23 (asg)
