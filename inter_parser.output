Terminals unused in grammar

   COMMA
   WHITESPACE
   NEWLINE


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 func FUNC BEG body_main FUNC END

    3 $@2: %empty

    4 func: func FUNC BEG ID $@2 stmt_list FUNC END
    5     | %empty

    6 $@3: %empty

    7 body_main: MAIN $@3 stmt_list

    8 stmt_list: stmt_list stmt
    9          | %empty

   10 stmt: LABEL COLON
   11     | asg SEMICOL
   12     | CALL ID SEMICOL
   13     | IF REG COMP INT_VALUE GOTO LABEL
   14     | IF REG NEQ INT_VALUE GOTO LABEL
   15     | GOTO LABEL
   16     | RETURN SEMICOL
   17     | RETURN REG SEMICOL
   18     | PARAM term SEMICOL
   19     | PARAM RESULT SEMICOL

   20 term: VAR
   21     | REG
   22     | INT_VALUE
   23     | FLOAT_VAL

   24 asg: VAR EQUALS REG
   25    | REG EQUALS expr
   26    | REG LS REG RS EQUALS expr
   27    | PAR_AM EQUALS REG
   28    | REG EQUALS PAR_AM
   29    | VAR EQUALS RESULT
   30    | REG EQUALS RESULT
   31    | PAR_AM EQUALS RESULT

   32 expr: REG op REG
   33     | REG LS REG RS
   34     | VAR
   35     | REG
   36     | INT_VALUE
   37     | FLOAT_VAL
   38     | ADDR LB REG RB
   39     | REG op INT_VALUE

   40 op: LT
   41   | GT
   42   | LE
   43   | GE
   44   | COMP
   45   | NEQ
   46   | ADD
   47   | SUB
   48   | MUL
   49   | DIV
   50   | MOD
   51   | AND
   52   | OR


Terminals, with rules where they appear

$end (0) 0
error (256)
RESULT (258) 19 29 30 31
PAR_AM (259) 27 28 31
PARAM (260) 18 19
LB (261) 38
VAR (262) 20 24 29 34
RB (263) 38
ADDR (264) 38
CALL (265) 12
FLOAT_VAL (266) 23 37
INT_VALUE (267) 13 14 22 36 39
REG (268) 13 14 17 21 24 25 26 27 28 30 32 33 35 38 39
AND (269) 51
OR (270) 52
ID (271) 4 12
LS (272) 26 33
RS (273) 26 33
EQUALS (274) 24 25 26 27 28 29 30 31
ADD (275) 46
SUB (276) 47
MUL (277) 48
DIV (278) 49
MOD (279) 50
GT (280) 41
LT (281) 40
GE (282) 43
LE (283) 42
COMP (284) 13 44
COLON (285) 10
NEQ (286) 14 45
COMMA (287)
IF (288) 13 14
GOTO (289) 13 14 15
LABEL (290) 10 13 14 15
WHITESPACE (291)
NEWLINE (292)
FUNC (293) 2 4
BEG (294) 2 4
END (295) 2 4
MAIN (296) 7
RETURN (297) 16 17
SEMICOL (298) 11 12 16 17 18 19


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
start (45)
    on left: 2, on right: 0
$@1 (46)
    on left: 1, on right: 2
func (47)
    on left: 4 5, on right: 2 4
$@2 (48)
    on left: 3, on right: 4
body_main (49)
    on left: 7, on right: 2
$@3 (50)
    on left: 6, on right: 7
stmt_list (51)
    on left: 8 9, on right: 4 7 8
stmt (52)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 8
term (53)
    on left: 20 21 22 23, on right: 18
asg (54)
    on left: 24 25 26 27 28 29 30 31, on right: 11
expr (55)
    on left: 32 33 34 35 36 37 38 39, on right: 25 26
op (56)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52, on right: 32 39


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . func FUNC BEG body_main FUNC END

    $default  reduce using rule 5 (func)

    func  go to state 4


State 3

    0 $accept: start $end .

    $default  accept


State 4

    2 start: $@1 func . FUNC BEG body_main FUNC END
    4 func: func . FUNC BEG ID $@2 stmt_list FUNC END

    FUNC  shift, and go to state 5


State 5

    2 start: $@1 func FUNC . BEG body_main FUNC END
    4 func: func FUNC . BEG ID $@2 stmt_list FUNC END

    BEG  shift, and go to state 6


State 6

    2 start: $@1 func FUNC BEG . body_main FUNC END
    4 func: func FUNC BEG . ID $@2 stmt_list FUNC END

    ID    shift, and go to state 7
    MAIN  shift, and go to state 8

    body_main  go to state 9


State 7

    4 func: func FUNC BEG ID . $@2 stmt_list FUNC END

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 8

    7 body_main: MAIN . $@3 stmt_list

    $default  reduce using rule 6 ($@3)

    $@3  go to state 11


State 9

    2 start: $@1 func FUNC BEG body_main . FUNC END

    FUNC  shift, and go to state 12


State 10

    4 func: func FUNC BEG ID $@2 . stmt_list FUNC END

    $default  reduce using rule 9 (stmt_list)

    stmt_list  go to state 13


State 11

    7 body_main: MAIN $@3 . stmt_list

    $default  reduce using rule 9 (stmt_list)

    stmt_list  go to state 14


State 12

    2 start: $@1 func FUNC BEG body_main FUNC . END

    END  shift, and go to state 15


State 13

    4 func: func FUNC BEG ID $@2 stmt_list . FUNC END
    8 stmt_list: stmt_list . stmt

    PAR_AM  shift, and go to state 16
    PARAM   shift, and go to state 17
    VAR     shift, and go to state 18
    CALL    shift, and go to state 19
    REG     shift, and go to state 20
    IF      shift, and go to state 21
    GOTO    shift, and go to state 22
    LABEL   shift, and go to state 23
    FUNC    shift, and go to state 24
    RETURN  shift, and go to state 25

    stmt  go to state 26
    asg   go to state 27


State 14

    7 body_main: MAIN $@3 stmt_list .
    8 stmt_list: stmt_list . stmt

    PAR_AM  shift, and go to state 16
    PARAM   shift, and go to state 17
    VAR     shift, and go to state 18
    CALL    shift, and go to state 19
    REG     shift, and go to state 20
    IF      shift, and go to state 21
    GOTO    shift, and go to state 22
    LABEL   shift, and go to state 23
    RETURN  shift, and go to state 25

    $default  reduce using rule 7 (body_main)

    stmt  go to state 26
    asg   go to state 27


State 15

    2 start: $@1 func FUNC BEG body_main FUNC END .

    $default  reduce using rule 2 (start)


State 16

   27 asg: PAR_AM . EQUALS REG
   31    | PAR_AM . EQUALS RESULT

    EQUALS  shift, and go to state 28


State 17

   18 stmt: PARAM . term SEMICOL
   19     | PARAM . RESULT SEMICOL

    RESULT     shift, and go to state 29
    VAR        shift, and go to state 30
    FLOAT_VAL  shift, and go to state 31
    INT_VALUE  shift, and go to state 32
    REG        shift, and go to state 33

    term  go to state 34


State 18

   24 asg: VAR . EQUALS REG
   29    | VAR . EQUALS RESULT

    EQUALS  shift, and go to state 35


State 19

   12 stmt: CALL . ID SEMICOL

    ID  shift, and go to state 36


State 20

   25 asg: REG . EQUALS expr
   26    | REG . LS REG RS EQUALS expr
   28    | REG . EQUALS PAR_AM
   30    | REG . EQUALS RESULT

    LS      shift, and go to state 37
    EQUALS  shift, and go to state 38


State 21

   13 stmt: IF . REG COMP INT_VALUE GOTO LABEL
   14     | IF . REG NEQ INT_VALUE GOTO LABEL

    REG  shift, and go to state 39


State 22

   15 stmt: GOTO . LABEL

    LABEL  shift, and go to state 40


State 23

   10 stmt: LABEL . COLON

    COLON  shift, and go to state 41


State 24

    4 func: func FUNC BEG ID $@2 stmt_list FUNC . END

    END  shift, and go to state 42


State 25

   16 stmt: RETURN . SEMICOL
   17     | RETURN . REG SEMICOL

    REG      shift, and go to state 43
    SEMICOL  shift, and go to state 44


State 26

    8 stmt_list: stmt_list stmt .

    $default  reduce using rule 8 (stmt_list)


State 27

   11 stmt: asg . SEMICOL

    SEMICOL  shift, and go to state 45


State 28

   27 asg: PAR_AM EQUALS . REG
   31    | PAR_AM EQUALS . RESULT

    RESULT  shift, and go to state 46
    REG     shift, and go to state 47


State 29

   19 stmt: PARAM RESULT . SEMICOL

    SEMICOL  shift, and go to state 48


State 30

   20 term: VAR .

    $default  reduce using rule 20 (term)


State 31

   23 term: FLOAT_VAL .

    $default  reduce using rule 23 (term)


State 32

   22 term: INT_VALUE .

    $default  reduce using rule 22 (term)


State 33

   21 term: REG .

    $default  reduce using rule 21 (term)


State 34

   18 stmt: PARAM term . SEMICOL

    SEMICOL  shift, and go to state 49


State 35

   24 asg: VAR EQUALS . REG
   29    | VAR EQUALS . RESULT

    RESULT  shift, and go to state 50
    REG     shift, and go to state 51


State 36

   12 stmt: CALL ID . SEMICOL

    SEMICOL  shift, and go to state 52


State 37

   26 asg: REG LS . REG RS EQUALS expr

    REG  shift, and go to state 53


State 38

   25 asg: REG EQUALS . expr
   28    | REG EQUALS . PAR_AM
   30    | REG EQUALS . RESULT

    RESULT     shift, and go to state 54
    PAR_AM     shift, and go to state 55
    VAR        shift, and go to state 56
    ADDR       shift, and go to state 57
    FLOAT_VAL  shift, and go to state 58
    INT_VALUE  shift, and go to state 59
    REG        shift, and go to state 60

    expr  go to state 61


State 39

   13 stmt: IF REG . COMP INT_VALUE GOTO LABEL
   14     | IF REG . NEQ INT_VALUE GOTO LABEL

    COMP  shift, and go to state 62
    NEQ   shift, and go to state 63


State 40

   15 stmt: GOTO LABEL .

    $default  reduce using rule 15 (stmt)


State 41

   10 stmt: LABEL COLON .

    $default  reduce using rule 10 (stmt)


State 42

    4 func: func FUNC BEG ID $@2 stmt_list FUNC END .

    $default  reduce using rule 4 (func)


State 43

   17 stmt: RETURN REG . SEMICOL

    SEMICOL  shift, and go to state 64


State 44

   16 stmt: RETURN SEMICOL .

    $default  reduce using rule 16 (stmt)


State 45

   11 stmt: asg SEMICOL .

    $default  reduce using rule 11 (stmt)


State 46

   31 asg: PAR_AM EQUALS RESULT .

    $default  reduce using rule 31 (asg)


State 47

   27 asg: PAR_AM EQUALS REG .

    $default  reduce using rule 27 (asg)


State 48

   19 stmt: PARAM RESULT SEMICOL .

    $default  reduce using rule 19 (stmt)


State 49

   18 stmt: PARAM term SEMICOL .

    $default  reduce using rule 18 (stmt)


State 50

   29 asg: VAR EQUALS RESULT .

    $default  reduce using rule 29 (asg)


State 51

   24 asg: VAR EQUALS REG .

    $default  reduce using rule 24 (asg)


State 52

   12 stmt: CALL ID SEMICOL .

    $default  reduce using rule 12 (stmt)


State 53

   26 asg: REG LS REG . RS EQUALS expr

    RS  shift, and go to state 65


State 54

   30 asg: REG EQUALS RESULT .

    $default  reduce using rule 30 (asg)


State 55

   28 asg: REG EQUALS PAR_AM .

    $default  reduce using rule 28 (asg)


State 56

   34 expr: VAR .

    $default  reduce using rule 34 (expr)


State 57

   38 expr: ADDR . LB REG RB

    LB  shift, and go to state 66


State 58

   37 expr: FLOAT_VAL .

    $default  reduce using rule 37 (expr)


State 59

   36 expr: INT_VALUE .

    $default  reduce using rule 36 (expr)


State 60

   32 expr: REG . op REG
   33     | REG . LS REG RS
   35     | REG .
   39     | REG . op INT_VALUE

    AND   shift, and go to state 67
    OR    shift, and go to state 68
    LS    shift, and go to state 69
    ADD   shift, and go to state 70
    SUB   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    MOD   shift, and go to state 74
    GT    shift, and go to state 75
    LT    shift, and go to state 76
    GE    shift, and go to state 77
    LE    shift, and go to state 78
    COMP  shift, and go to state 79
    NEQ   shift, and go to state 80

    $default  reduce using rule 35 (expr)

    op  go to state 81


State 61

   25 asg: REG EQUALS expr .

    $default  reduce using rule 25 (asg)


State 62

   13 stmt: IF REG COMP . INT_VALUE GOTO LABEL

    INT_VALUE  shift, and go to state 82


State 63

   14 stmt: IF REG NEQ . INT_VALUE GOTO LABEL

    INT_VALUE  shift, and go to state 83


State 64

   17 stmt: RETURN REG SEMICOL .

    $default  reduce using rule 17 (stmt)


State 65

   26 asg: REG LS REG RS . EQUALS expr

    EQUALS  shift, and go to state 84


State 66

   38 expr: ADDR LB . REG RB

    REG  shift, and go to state 85


State 67

   51 op: AND .

    $default  reduce using rule 51 (op)


State 68

   52 op: OR .

    $default  reduce using rule 52 (op)


State 69

   33 expr: REG LS . REG RS

    REG  shift, and go to state 86


State 70

   46 op: ADD .

    $default  reduce using rule 46 (op)


State 71

   47 op: SUB .

    $default  reduce using rule 47 (op)


State 72

   48 op: MUL .

    $default  reduce using rule 48 (op)


State 73

   49 op: DIV .

    $default  reduce using rule 49 (op)


State 74

   50 op: MOD .

    $default  reduce using rule 50 (op)


State 75

   41 op: GT .

    $default  reduce using rule 41 (op)


State 76

   40 op: LT .

    $default  reduce using rule 40 (op)


State 77

   43 op: GE .

    $default  reduce using rule 43 (op)


State 78

   42 op: LE .

    $default  reduce using rule 42 (op)


State 79

   44 op: COMP .

    $default  reduce using rule 44 (op)


State 80

   45 op: NEQ .

    $default  reduce using rule 45 (op)


State 81

   32 expr: REG op . REG
   39     | REG op . INT_VALUE

    INT_VALUE  shift, and go to state 87
    REG        shift, and go to state 88


State 82

   13 stmt: IF REG COMP INT_VALUE . GOTO LABEL

    GOTO  shift, and go to state 89


State 83

   14 stmt: IF REG NEQ INT_VALUE . GOTO LABEL

    GOTO  shift, and go to state 90


State 84

   26 asg: REG LS REG RS EQUALS . expr

    VAR        shift, and go to state 56
    ADDR       shift, and go to state 57
    FLOAT_VAL  shift, and go to state 58
    INT_VALUE  shift, and go to state 59
    REG        shift, and go to state 60

    expr  go to state 91


State 85

   38 expr: ADDR LB REG . RB

    RB  shift, and go to state 92


State 86

   33 expr: REG LS REG . RS

    RS  shift, and go to state 93


State 87

   39 expr: REG op INT_VALUE .

    $default  reduce using rule 39 (expr)


State 88

   32 expr: REG op REG .

    $default  reduce using rule 32 (expr)


State 89

   13 stmt: IF REG COMP INT_VALUE GOTO . LABEL

    LABEL  shift, and go to state 94


State 90

   14 stmt: IF REG NEQ INT_VALUE GOTO . LABEL

    LABEL  shift, and go to state 95


State 91

   26 asg: REG LS REG RS EQUALS expr .

    $default  reduce using rule 26 (asg)


State 92

   38 expr: ADDR LB REG RB .

    $default  reduce using rule 38 (expr)


State 93

   33 expr: REG LS REG RS .

    $default  reduce using rule 33 (expr)


State 94

   13 stmt: IF REG COMP INT_VALUE GOTO LABEL .

    $default  reduce using rule 13 (stmt)


State 95

   14 stmt: IF REG NEQ INT_VALUE GOTO LABEL .

    $default  reduce using rule 14 (stmt)
